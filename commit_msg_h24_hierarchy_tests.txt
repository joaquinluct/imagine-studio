test(scene): Implementar tests parent-child hierarchy (H2.4)

Historia H2.4 - Tests parent-child hierarchy completados

Implementacion:
- Ampliar tests/transform_test.cpp con funcion TestParentChildHierarchy()
- 5 tests nuevos para validar jerarquia padre-hijo
- Total: 20 tests (15 previos + 5 nuevos)

Tests implementados:
1. SetParent() y GetParent() funcionan correctamente
2. Child hereda posicion del parent (world matrix propagado)
3. Mover parent mueve child automaticamente (cascada)
4. Remover parent con SetParent(nullptr) funciona
5. Multi-level hierarchy (grandparent -> parent -> child)

Casos de prueba:
- Parent(10,0,0) + Child(5,0,0) = Child_world(15,0,0)
- Parent(20,0,0) + Child(5,0,0) = Child_world(25,0,0)
- SetParent(nullptr): Child_world = Child_local(5,0,0)
- Grandparent(100) + Parent(10) + Child(1) = Child_world(111,0,0)

Caracteristicas:
- Usa EntityManager y Entity real (no mocks)
- Valida propagacion recursiva de transformaciones
- Verifica cascada completa de parent a child
- Tests multi-nivel (3 generaciones)
- Validacion de remover parent

Archivos modificados:
- tests/transform_test.cpp (TestParentChildHierarchy anadido)

Compilacion limpia: CMake + MSBuild (0 errores, 0 warnings)

Ejecucion de tests:
========================================
Transform Component Unit Tests
========================================
[TEST] TestTransformDefaultValues - PASSED (3 tests)
[TEST] TestTransformSettersGetters - PASSED (7 tests)
[TEST] TestTransformLocalMatrix - PASSED (4 tests)
[TEST] TestTransformWorldMatrix - PASSED (1 test)
[TEST] TestParentChildHierarchy - PASSED (5 tests)
========================================
ALL TESTS PASSED! (20 asserts)
========================================

Proxima tarea: H3.1 - Scene class

Historia H2 completada: Transform Component con hierarchy validado

Referencia: H2.4 - Tests hierarchy v1.4.0
